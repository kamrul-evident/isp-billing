events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout 65;
    gzip on;
    gzip_types text/plain application/javascript text/css application/json;

    # CORS configuration
    map $http_origin $cors_origin {
        default "";
        "~^http://localhost(:[0-9]+)?$" "$http_origin";
        "~^http://127\.0\.0\.1(:[0-9]+)?$" "$http_origin";
        "~^http://192\.168\.68\.108(:[0-9]+)?$" "$http_origin";
    }

    # Debug CORS (uncomment for debugging)
    # map $http_origin $debug_cors {
    #     default "no_origin";
    #     "~^http://localhost(:[0-9]+)?$" "localhost";
    #     "~^http://127\.0\.0\.1(:[0-9]+)?$" "127.0.0.1";
    #     "~^http://192\.168\.68\.108(:[0-9]+)?$" "192.168.68.108";
    # }

    server {
        listen 80;

        # Serve static files from Django
        location /static/ {
            alias /static/;
            expires 7d;
            add_header Cache-Control "public, max-age=604800, immutable";
        }

        # Backend API requests - route /api/ to Django
        location /api/ {
            proxy_pass http://django-web:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add CORS headers
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Allow-Credentials true always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
                add_header Access-Control-Max-Age 1728000 always;
                add_header Content-Type 'text/plain; charset=utf-8' always;
                add_header Content-Length 0 always;
                return 204;
            }
        }

        # Admin interface
        location /admin/ {
            proxy_pass http://django-web:8000/admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        # Profiler interface
        location /profiler/ {
            proxy_pass http://django-web:8000/profiler/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Frontend (Next.js)
        location / {
            proxy_pass http://nextjs:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
